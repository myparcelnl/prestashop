name: Build and publish

on:
  push:
    branches:
      - master
    paths:
      - controllers/**/*
      - mails/**/*
      - src/**/*
      - upgrade/**/*
      - views/**/*
      - .babelrc
      - composer.json
      - composer.lock
      - index.php
      - myparcelbe.php
      - package-lock.json
      - package.json

jobs:
  build:
    name: Build ðŸ“¦
    runs-on: ubuntu-20.04
    steps:
      # Set up environment
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.2'
          tools: composer:v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      # Checkout repository
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Cache related tasks
      - name: Handle NPM cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Get Composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Handle Composer cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      # Install dependencies
      - name: Install composer dependencies
        run: composer install --no-dev
      - name: Install npm dependencies
        run: npm ci --no-optional

      # Build the modules
      - name: Create build
        run: npx gulp build

      # Upload artifacts for publish stage
      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            dist/*.zip

  release:
    name: Publish ðŸš€
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v2
      - name: Handle NPM cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Get build
        uses: actions/download-artifact@v1
        with:
          name: dist
      - name: Install semantic release plugins
        run: npm i conventional-changelog-conventionalcommits --no-optional
      - name: Run semantic release
        uses: cycjimmy/semantic-release-action@v2
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
