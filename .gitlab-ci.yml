stages:
  - preparation
  - building
  - packaging

image: registry.gitlab.com/gettbv-general/prestashop/modules/myparcel-nl-be:latest

cache:
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"

.script:
  rename:
    - find . -type d \( -name node_modules -o -name .git -o -name vendor \) -prune -false -o -type f \( ! -iname "*.png" ! -iname "*.jpg" \) -exec sed -i "s/myparcelbe/myparcelnl/g" {} \;
    - find . -type d \( -name node_modules -o -name .git -o -name vendor \) -prune -false -o -type f \( ! -iname "*.png" ! -iname "*.jpg" \) -exec sed -i "s/MyparcelBE/MyparcelNL/g" {} \;
    - find . -type d \( -name node_modules -o -name .git -o -name vendor \) -prune -false -o -type f \( ! -iname "*.png" ! -iname "*.jpg" \) -exec sed -i "s/MyParcelBE/MyParcelNL/g" {} \;
    - find . -type d \( -name node_modules -o -name .git -o -name vendor \) -prune -false -o -type f \( ! -iname "*.png" ! -iname "*.jpg" \) -exec sed -i "s/MYPARCELBE/MYPARCELNL/g" {} \;
    - mv myparcelbe.php myparcelnl.php
    - mv controllers/admin/AdminMyParcelBEController.php controllers/admin/AdminMyParcelNLController.php
    - mv controllers/admin/AdminMyParcelBELabelController.php controllers/admin/AdminMyParcelNLLabelController.php
  prepare:
    - php -v
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts --no-dev
    - npm --version
    - npm ci
  build:
    - npm --version
    - npm run build
  packaging:
    - shopt -s dotglob nullglob
    - rm -rf .git/ .gitignore .gitlab-ci.yml Dockerfile .babelrc composer.json composer.lock package.json package-lock.json webpack.config.js readme.md node_modules/

preparation:nl:
  stage: preparation
  script:
    - !reference [.script, rename]
    - !reference [.script, prepare]
  artifacts:
    paths:
      - vendor/
      - node_modules/
    expire_in: 1 days
    when: always
  cache:
    paths:
      - vendor/
      - node_modules/
  only:
    - tags

preparation:be:
  stage: preparation
  script:
    - !reference [.script, prepare]
  artifacts:
    paths:
      - vendor/
      - node_modules/
    expire_in: 1 days
    when: always
  cache:
    paths:
      - vendor/
      - node_modules/
  only:
    - tags

building:nl:
  stage: building
  dependencies:
    - preparation:nl
  script:
    - !reference [.script, rename]
    - !reference [.script, build]
  artifacts:
    paths:
      - views/dist/
    expire_in: 1 days
    when: always
  only:
    - tags

building:be:
  stage: building
  dependencies:
    - preparation:be
  script:
    - !reference [.script, build]
  artifacts:
    paths:
      - views/dist/
    expire_in: 1 days
    when: always
  only:
    - tags

packaging:nl:
  stage: packaging
  dependencies:
    - preparation:nl
    - building:nl
  script:
    - !reference [.script, rename]
    - !reference [.script, packaging]
    - mkdir myparcelnl
    - mv ./* myparcelnl/ || true
  artifacts:
      name: "MyParcelNL-v$CI_COMMIT_TAG"
      paths:
          - ./
  only:
    - tags

packaging:be:
  stage: packaging
  dependencies:
    - preparation:be
    - building:be
  script:
    - !reference [.script, packaging]
    - mkdir myparcelbe
    - mv ./* myparcelbe/ || true
  artifacts:
      name: "MyParcelBE-v$CI_COMMIT_TAG"
      paths:
          - ./
  only:
    - tags
